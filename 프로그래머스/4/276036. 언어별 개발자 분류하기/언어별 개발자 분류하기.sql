# -- 코드를 작성해주세요
# SELECT CASE WHEN SKILL_CODE&(SELECT CODE FROM SKILLCODES WHERE NAME = 'Python') AND SKILL_CODE&(SELECT SUM(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End') THEN 'A' WHEN SKILL_CODE&(SELECT CODE FROM SKILLCODES WHERE NAME = 'C#') THEN 'B' WHEN SKILL_CODE&(SELECT SUM(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End') THEN 'C' END AS GRADE, ID, EMAIL
# FROM DEVELOPERS
# WHERE GRADE IS NOT NULL
# ORDER BY GRADE, ID

# # select case
# # when SKILL_CODE&(select CODE
# # from SKILLCODES
# # where NAME = 'Python') and
# # SKILL_CODE&(select sum(CODE)
# # from SKILLCODES
# # where CATEGORY = 'Front End') then 'A'
# # when SKILL_CODE&(select CODE
# # from SKILLCODES
# # where NAME = 'C#') then 'B'
# # when SKILL_CODE&(select sum(CODE)
# # from SKILLCODES
# # where CATEGORY = 'Front End') then 'C' end GRADE,
# # ID, EMAIL
# # from DEVELOPERS
# # having GRADE is not null
# # order by GRADE, ID




WITH V AS (SELECT CASE WHEN SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'Python') AND SKILL_CODE & (SELECT SUM(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End') THEN 'A' WHEN SKILL_CODE & (SELECT CODE FROM SKILLCODES WHERE NAME = 'C#') THEN 'B' WHEN SKILL_CODE & (SELECT SUM(CODE) FROM SKILLCODES WHERE CATEGORY = 'Front End') THEN 'C' END AS GRADE, ID, EMAIL
FROM DEVELOPERS 
#WHERE GRADE IS NOT NULL
ORDER BY GRADE, ID)

SELECT * FROM V
WHERE GRADE IS NOT NULL









